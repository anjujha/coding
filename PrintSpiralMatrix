#include <iostream>
#include <vector>
using namespace std;


vector < vector<int> > generateMatrix(int n) {
        
        vector < vector<int> > mat(n, vector<int> (n,0)) ;
  
        int maxLayer = (n/2)+(n%2);
        int count = 1;
        int currLayer = 0;
        
        while (currLayer != maxLayer)
        {
            int r = currLayer; int c = currLayer;
            for (c = currLayer; c < (n-currLayer); c++)
            {
                cout <<"-->"<< count<< endl;
              mat[r][c] = count++;   
            }
            for (r = currLayer+1, c = (n-currLayer-1);r < (n-currLayer); r++)
            {
              cout <<"|down|"<< count<<endl;
                mat[r][c] = count++;
            }
            for (c = (n-currLayer-2), r = (n-currLayer-1); c >=currLayer; c--)
            {
              cout <<"<--"<< count<<endl;
                mat[r][c] = count++;
            }
            for (r = (n-currLayer-2),c =currLayer; r >currLayer; r--)
            {
              cout <<"|up|"<< count<<endl;
               mat[r][c] = count++; 
            }
            currLayer++;            
        }

  return mat;
}
int main() {

 
  int n = 1;
  vector < vector<int> > m = generateMatrix(n);
  for (int i = 0 ; i < n; i++)
  {
    for (int j =0; j < n; j++)
    {
      cout << m[i][j]<<" " ;
    }
    cout << endl;
  }
  n = 5;
  m = generateMatrix(n);
  for (int i = 0 ; i < n; i++)
  {
    for (int j =0; j < n; j++)
    {
      cout << m[i][j]<<" " ;
    }
    cout << endl;
  }

}
