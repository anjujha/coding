#include <iostream>
#include <unordered_map>
#include <algorithm>

using namespace std;


char firstNonRepeatedChar1(string s)
{
  
    int n = s.length();
    string sub = s;
    for (int i = 0 ; i < n ; i++)
    {
      char c = s.at(i);      
      sub = sub.erase(i,1);
      cout << "Searching for "<< c << " in " << sub << endl;
      size_t pos = sub.find(c);       
      if (pos == string::npos )
      {
        return c;
      }     
      sub = s;

    }
  return 0;
  
}




char firstNonRepeatedChar2(string s)
{
  
    int n = s.length();
    unordered_map<char, int> map;
  
    for (int i = 0 ; i < n ; i++)
    {
      char c = s.at(i);
      if (map.find(c) == map.end())
      {
          map.emplace(c, 1);
      }
      else
      {
      map[c] = map[c]+1;
      }

    }
  
  for (auto c: s)
  {
    if (map[c] == 1)
      return c;
  }
  return 0;
  
}


// To execute C++, please define "int main()"

int main() {

  
  cout <<"First method " << endl;
  cout << firstNonRepeatedChar1("add") << endl;
  cout << firstNonRepeatedChar1("egge") << endl;
  cout << firstNonRepeatedChar1("a") << endl;
  
  cout <<"Second method " << endl;
  cout << firstNonRepeatedChar2("add") << endl;
  cout << firstNonRepeatedChar2("egge") << endl;
  cout << firstNonRepeatedChar2("a") << endl;
 return 0;

}
